{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"VirtualBow Software for designing and simulating bows VirtualBow is a free, open-source software tool for designing and simulating bows. It gives users an easy way to test and optimize their bow designs before actually building them. The software provides almost instant feedback about a bow's predicted performance by calculating things like the force/draw curve, limb deformation, stress distributions, arrow velocity and degree of efficiency. For more details see the screenshots and feature list below or have a look at the user manual . Features Model Editor Create, load and save bow models Edit width, layers, materials and many other properties of your bow Solver & Result Viewer Simulates the statics and dynamics of the bow based on the finite element method (FEM) Static results: Behaviour of the bow when being drawn from brace height to full draw Limb shapes Draw curve Stored energy Stress distribution ... Dynamic results: Behaviour of the bow and arrow in motion when the string is released Position, velocity and acceleration of string and arrow Kinetic and potential energy Degree of efficiency ... Command Line Interface Run simulations from the command line for advanced use cases Call VirtualBow from external programs/scripts to perform parameter studies and design optimizations Fully Documented User Manual : Explains all features of the program and helps you getting started Theory Manual : Detailed documentation of the internal simulation methods Free and Open-Source Released under the GNU General Public License v3.0 Free to use, modify and redistribute Anyone can get involved in the development Cross-Platform Downloads are available for Windows, Linux and macOS","title":"Home"},{"location":"#features","text":"Model Editor Create, load and save bow models Edit width, layers, materials and many other properties of your bow Solver & Result Viewer Simulates the statics and dynamics of the bow based on the finite element method (FEM) Static results: Behaviour of the bow when being drawn from brace height to full draw Limb shapes Draw curve Stored energy Stress distribution ... Dynamic results: Behaviour of the bow and arrow in motion when the string is released Position, velocity and acceleration of string and arrow Kinetic and potential energy Degree of efficiency ... Command Line Interface Run simulations from the command line for advanced use cases Call VirtualBow from external programs/scripts to perform parameter studies and design optimizations Fully Documented User Manual : Explains all features of the program and helps you getting started Theory Manual : Detailed documentation of the internal simulation methods Free and Open-Source Released under the GNU General Public License v3.0 Free to use, modify and redistribute Anyone can get involved in the development Cross-Platform Downloads are available for Windows, Linux and macOS","title":"Features"},{"location":"contact/","text":"Contact and Support VirtualBow is developed by Stefan Pfeifer . Feel free to contact me with any questions, ideas or remarks about the program. You can also visit our subreddit r/VirtualBow for news, support and general discussion of anything related to VirtualBow.","title":"Contact & Support"},{"location":"contact/#contact-and-support","text":"VirtualBow is developed by Stefan Pfeifer . Feel free to contact me with any questions, ideas or remarks about the program. You can also visit our subreddit r/VirtualBow for news, support and general discussion of anything related to VirtualBow.","title":"Contact and Support"},{"location":"contributing/","text":"Getting Involved There are many ways to get involved with this project and help with the development. The list below might give you some ideas, but feel free to contact me with your own ideas as well. Any help is appreciated! Feedback, Feature Requests and Bug Reports Let me know what you like or dislike about the program. Was it easy to get started with? What do you use it for? Are there specific features you wish it had? And of course be sure to report any bugs or other problems you encounter. If you have a GitHub account, feel free to participate in the project's issue tracker as well. If you feel adventurous you can also try the latest development build and test upcoming features before they are released. Software Development VirtualBow is written in C++ and uses the Qt framework for the user interface. The source code is hosted at https://github.com/bow-simulation/virtualbow . Check out the Readme for build instructions and how to contribute. There are always lots of things to implement or improve, from the user interface down to the simulation model and the numerical methods. Have a look at the issue tracker and milestones if you need ideas or get in contact with me and I will gladly help you getting started. Validation of Simulation Results If you have used this program to design or model a bow, let me know how the simulation results compare to the real bow. Many simulation results however are difficult to measure, think about stresses for example. Therefore people with access to advanced measuring equipment (things like strain gauges, acceleration sensors, a high speed camera, etc.) could be very helpful for this project.","title":"Getting Involved"},{"location":"contributing/#getting-involved","text":"There are many ways to get involved with this project and help with the development. The list below might give you some ideas, but feel free to contact me with your own ideas as well. Any help is appreciated! Feedback, Feature Requests and Bug Reports Let me know what you like or dislike about the program. Was it easy to get started with? What do you use it for? Are there specific features you wish it had? And of course be sure to report any bugs or other problems you encounter. If you have a GitHub account, feel free to participate in the project's issue tracker as well. If you feel adventurous you can also try the latest development build and test upcoming features before they are released. Software Development VirtualBow is written in C++ and uses the Qt framework for the user interface. The source code is hosted at https://github.com/bow-simulation/virtualbow . Check out the Readme for build instructions and how to contribute. There are always lots of things to implement or improve, from the user interface down to the simulation model and the numerical methods. Have a look at the issue tracker and milestones if you need ideas or get in contact with me and I will gladly help you getting started. Validation of Simulation Results If you have used this program to design or model a bow, let me know how the simulation results compare to the real bow. Many simulation results however are difficult to measure, think about stresses for example. Therefore people with access to advanced measuring equipment (things like strain gauges, acceleration sensors, a high speed camera, etc.) could be very helpful for this project.","title":"Getting Involved"},{"location":"download/","text":"Windows macOS Linux For 64 bit versions of Windows 8 , Windows 10 and later. For macOS 10.13 and later. The Linux packages are tested on Ubuntu 20.04 and Fedora 35 but should also work on other distributions. virtualbow-v0.9.0-win64.exe virtualbow-v0.9.0-mac64.dmg virtualbow-v0.9.0-linux64.deb virtualbow-v0.9.0-linux64.rpm VirtualBow is free, open source software released under the GNU General Public License v3.0 . With a donation you can help cover the expenses of the project and support its continued development.","title":"Download"},{"location":"news/","text":"Version 0.9 released! 22.08.2022 It has been a while since the last release, but this new version introduces several important features that have been on the list for a long time. Particularly the following three points: Support for units : The units of all input and output data are now configurable, including both SI and US units. Dimensions for example can now be entered in millimeters, centimeters or inches instead of meters and the draw force can be displayed in pounds instead of newton. A new way to define the bow profile : The profile curve is no longer only based on length and curvature. Instead there are now various segment types like lines, arcs, spirals and splines that can be combined by users. This is only a first minimal version though and will be extended in the upcoming releases. A new layout of the bow editor : The properties of the bow are no longer shown and edited via different pop-up dialogs. The new layout uses fixed panels instead that show the properties currently selected in the model tree. Other notable new features besides those are: An option to overlay images over plots for easier comparison Plot contents can be exported as CSV for easier exchange with external spreadsheet programs Number input fields accept arithmetic expressions, like (5*5 + 8)/2 Material properties can be edited separately from the layers, the colors are now user-defined And of course there are also the usual bug fixes and minor changes, all of which are listed in the changelog . Version 0.8 released! 13.03.2021 This release adds various smaller features and improvements, like for example A new arrow clamp force that prevents the arrow from leaving the string too early New icons for the toolbar and model tree as well as other visual changes Improvements to the presentation of some of the output results Several bug fixes and minor improvements The complete list of changes can be found in the changelog . Version 0.7.1 released! 28.05.2020 This minor release fixes two issues that prevent VirtualBow from being usable on MacOS, as well as another issue on Windows where the simulation would fail for certain input parameters. As always, the exact changes can be found in the changelog . Version 0.7 released! 12.05.2020 The most notable change in this new version of VirtualBow is that the application has been split into the following three independent components: VirtualBow - Model editor, creates, loads and saves model files VirtualBow Post - Result viewer, opens and visualizes result files VirtualBow Solver - Reads a model file and produces a result file The basic workflow of the program is still very similar, but it is now also possible to save and view simulation results independently from the main application. Other than that there are many smaller improvements to the user interfaces of both model editor and result viewer. On the simulation side, several new output results were added, as well as the possibility to take the damping properties of limbs and string into account. Since Windows 7 reached its end of life in January this year, it is no longer a supported platform for VirtualBow. Along with that, the 32 bit Windows version was also dropped from the releases. Another release that unfortunately had to be dropped is the AppImage for Linux. The approach \"one application - one file\" just doesn't work very well anymore with the new components. Hopefully most users can switch to the deb or rpm packages. Sorry for any inconvenience this may cause! A detailed list of changes can be found in the changelog . Version 0.6.1 released! 02.11.2019 This is just a minor bugfix release and only relevant if you (plan to) use the command line interface on Windows. It fixes an issue when trying to read the binary output files with Python. Meanwhile, work on the next major version 0.7 continues as usual. Version 0.6 released! 11.08.2019 The first thing you might notice is that this project has been renamed to VirtualBow . The old name Bow Simulator , even though very descriptive, was a bit uninspired and more of a placeholder anyway. This latest version now finally supports MacOS, making the software available on all major desktop systems. Releases for rpm -based Linux distributions were also added. Other than that, only minor new features have been introduced, like better width/height interpolation and a more user-friendly way of defining bows with a stiff middle section. For a complete list of changes have a look at the new changelog . Most of the work on this version however doesn't affect users directly. The project has been moved to GitHub and now uses Azure Pipelines to automatically build release files for all supported platforms. This makes creating and testing new releases much less time-consuming and will hopefully lead to more frequent and regular releases in the future. Version 0.5 released! 18.03.2018 The most important new feature in this release is support for laminated bows, i.e. bows that consist of multiple layers. This has been on the list for quite a while and allows for a much wider range of possible bow designs. As usual there are also various bug fixes, usability improvements and little design changes. For Windows there is now a 64 bit version available in addition to the 32 bit one. Download numbers will decide the fate of the 32 bit version in future releases. For Linux the distribution agnostic download is now an AppImage instead of a snap package . Version 0.4 released! 04.11.2017 The main new features for this release are Contact handling, which allows the simulation of recurve bows Two new simulation results: String force and grip force A compatibility layer for opening older bow files. From now on you can expect your files to keep working with new releases, despite the file format changing every now and then. There are also various smaller and larger bug fixes and other improvements. Most notably the robustness of the static simulation methods has increased a lot. Many bow designs that previously would have crashed the simulation are now possible. Version 0.3 released! 04.09.2017 This release introduces a new command line interface for running simulations in batch mode, without opening the GUI. This way Bow Simulator can be called from other programs for performing more advanced computations like parameter studies and optimizations. The user manual has been updated with detailed specifications of the input and output formats and an example for using Bow Simulator with the Python programming language. Version 0.2 released! 06.08.2017 This is another fairly extensive redesign of the user interface. This time the changes are A new tree based bow editor A 3d view of the limb geometry Many minor improvements and bugfixes Unfortunately there is also some bad news: No more Mac OS support for now. I previously used a virtual machine to compile the Mac version of this program, but it stopped working and I couldn't manage to set it up again (Mac OS can be really tricky without Apple hardware). So in order to not delay this release any further I decided to give up on that for now. Version 0.1 released! 25.12.2016 This is the initial release of Bow Simulator, a complete rewrite and redesign of its predecessor Bow Simulation Tool . It comes with many improvements such as A more user-friendly interface Improved simulation performance Cross-platform support (Windows, Linux, Mac OS X) The internal redesign of the program lays the groundwork for new features like simulating laminated bows, which is planned for one of the upcoming versions. Thank you for your interest and stay tuned!","title":"News"},{"location":"news/#version-09-released-22082022","text":"It has been a while since the last release, but this new version introduces several important features that have been on the list for a long time. Particularly the following three points: Support for units : The units of all input and output data are now configurable, including both SI and US units. Dimensions for example can now be entered in millimeters, centimeters or inches instead of meters and the draw force can be displayed in pounds instead of newton. A new way to define the bow profile : The profile curve is no longer only based on length and curvature. Instead there are now various segment types like lines, arcs, spirals and splines that can be combined by users. This is only a first minimal version though and will be extended in the upcoming releases. A new layout of the bow editor : The properties of the bow are no longer shown and edited via different pop-up dialogs. The new layout uses fixed panels instead that show the properties currently selected in the model tree. Other notable new features besides those are: An option to overlay images over plots for easier comparison Plot contents can be exported as CSV for easier exchange with external spreadsheet programs Number input fields accept arithmetic expressions, like (5*5 + 8)/2 Material properties can be edited separately from the layers, the colors are now user-defined And of course there are also the usual bug fixes and minor changes, all of which are listed in the changelog .","title":"Version 0.9 released! 22.08.2022"},{"location":"news/#version-08-released-13032021","text":"This release adds various smaller features and improvements, like for example A new arrow clamp force that prevents the arrow from leaving the string too early New icons for the toolbar and model tree as well as other visual changes Improvements to the presentation of some of the output results Several bug fixes and minor improvements The complete list of changes can be found in the changelog .","title":"Version 0.8 released! 13.03.2021"},{"location":"news/#version-071-released-28052020","text":"This minor release fixes two issues that prevent VirtualBow from being usable on MacOS, as well as another issue on Windows where the simulation would fail for certain input parameters. As always, the exact changes can be found in the changelog .","title":"Version 0.7.1 released! 28.05.2020"},{"location":"news/#version-07-released-12052020","text":"The most notable change in this new version of VirtualBow is that the application has been split into the following three independent components: VirtualBow - Model editor, creates, loads and saves model files VirtualBow Post - Result viewer, opens and visualizes result files VirtualBow Solver - Reads a model file and produces a result file The basic workflow of the program is still very similar, but it is now also possible to save and view simulation results independently from the main application. Other than that there are many smaller improvements to the user interfaces of both model editor and result viewer. On the simulation side, several new output results were added, as well as the possibility to take the damping properties of limbs and string into account. Since Windows 7 reached its end of life in January this year, it is no longer a supported platform for VirtualBow. Along with that, the 32 bit Windows version was also dropped from the releases. Another release that unfortunately had to be dropped is the AppImage for Linux. The approach \"one application - one file\" just doesn't work very well anymore with the new components. Hopefully most users can switch to the deb or rpm packages. Sorry for any inconvenience this may cause! A detailed list of changes can be found in the changelog .","title":"Version 0.7 released! 12.05.2020"},{"location":"news/#version-061-released-02112019","text":"This is just a minor bugfix release and only relevant if you (plan to) use the command line interface on Windows. It fixes an issue when trying to read the binary output files with Python. Meanwhile, work on the next major version 0.7 continues as usual.","title":"Version 0.6.1 released! 02.11.2019"},{"location":"news/#version-06-released-11082019","text":"The first thing you might notice is that this project has been renamed to VirtualBow . The old name Bow Simulator , even though very descriptive, was a bit uninspired and more of a placeholder anyway. This latest version now finally supports MacOS, making the software available on all major desktop systems. Releases for rpm -based Linux distributions were also added. Other than that, only minor new features have been introduced, like better width/height interpolation and a more user-friendly way of defining bows with a stiff middle section. For a complete list of changes have a look at the new changelog . Most of the work on this version however doesn't affect users directly. The project has been moved to GitHub and now uses Azure Pipelines to automatically build release files for all supported platforms. This makes creating and testing new releases much less time-consuming and will hopefully lead to more frequent and regular releases in the future.","title":"Version 0.6 released! 11.08.2019"},{"location":"news/#version-05-released-18032018","text":"The most important new feature in this release is support for laminated bows, i.e. bows that consist of multiple layers. This has been on the list for quite a while and allows for a much wider range of possible bow designs. As usual there are also various bug fixes, usability improvements and little design changes. For Windows there is now a 64 bit version available in addition to the 32 bit one. Download numbers will decide the fate of the 32 bit version in future releases. For Linux the distribution agnostic download is now an AppImage instead of a snap package .","title":"Version 0.5 released! 18.03.2018"},{"location":"news/#version-04-released-04112017","text":"The main new features for this release are Contact handling, which allows the simulation of recurve bows Two new simulation results: String force and grip force A compatibility layer for opening older bow files. From now on you can expect your files to keep working with new releases, despite the file format changing every now and then. There are also various smaller and larger bug fixes and other improvements. Most notably the robustness of the static simulation methods has increased a lot. Many bow designs that previously would have crashed the simulation are now possible.","title":"Version 0.4 released! 04.11.2017"},{"location":"news/#version-03-released-04092017","text":"This release introduces a new command line interface for running simulations in batch mode, without opening the GUI. This way Bow Simulator can be called from other programs for performing more advanced computations like parameter studies and optimizations. The user manual has been updated with detailed specifications of the input and output formats and an example for using Bow Simulator with the Python programming language.","title":"Version 0.3 released! 04.09.2017"},{"location":"news/#version-02-released-06082017","text":"This is another fairly extensive redesign of the user interface. This time the changes are A new tree based bow editor A 3d view of the limb geometry Many minor improvements and bugfixes Unfortunately there is also some bad news: No more Mac OS support for now. I previously used a virtual machine to compile the Mac version of this program, but it stopped working and I couldn't manage to set it up again (Mac OS can be really tricky without Apple hardware). So in order to not delay this release any further I decided to give up on that for now.","title":"Version 0.2 released! 06.08.2017"},{"location":"news/#version-01-released-25122016","text":"This is the initial release of Bow Simulator, a complete rewrite and redesign of its predecessor Bow Simulation Tool . It comes with many improvements such as A more user-friendly interface Improved simulation performance Cross-platform support (Windows, Linux, Mac OS X) The internal redesign of the program lays the groundwork for new features like simulating laminated bows, which is planned for one of the upcoming versions. Thank you for your interest and stay tuned!","title":"Version 0.1 released! 25.12.2016"},{"location":"resources/","text":"Example Bows The user-maintained repository VirtualBowModels provides example files for various different bow designs. They are intended as a starting point for users to create their own designs. Comments and contributions are encouraged by the original author. Material Data The Wood Database provides average values for the mechanical properties of many types of wood MatWeb is a database for material properties that includes many other types of material besides wood String material data Tensile test results for Dacron B50 , Fastflight Plus and BCY 452X , done by the German Institutes of Textile and Fiber Research ( DITF ). The report is German, but the results can also be found in the user manual . Other Software Python support code for VirtualBow This user-maintained project provides various utilities that make interacting with VirtualBow from Python more convenient. Features include creation of *.bow files, running simulations and evaluating *.res files. SuperTiller Is an Excel spreadsheet made by Alan Case for simulating the statics of user-defined bows. It's probably one of the most well-known bow design tools so far. Woodbear's Selfbow Design Sheet (zip) is an Excel spreadsheet that takes an inverse approach to the bow design problem - it calculates the necessary dimensions for a bow according to a user-defined stress distribution. BowCAD was a commercialy developed bow design software. Unfortunately it seems to be no longer available, which is a shame because it looked really promising. An archived version of their former website can be viewed here . Physics of Bow and Arrow Bob Kooi's Archery publications Bow and arrow dynamics Archery: The Technical Side","title":"Resources"},{"location":"resources/#example-bows","text":"The user-maintained repository VirtualBowModels provides example files for various different bow designs. They are intended as a starting point for users to create their own designs. Comments and contributions are encouraged by the original author.","title":"Example Bows"},{"location":"resources/#material-data","text":"The Wood Database provides average values for the mechanical properties of many types of wood MatWeb is a database for material properties that includes many other types of material besides wood String material data Tensile test results for Dacron B50 , Fastflight Plus and BCY 452X , done by the German Institutes of Textile and Fiber Research ( DITF ). The report is German, but the results can also be found in the user manual .","title":"Material Data"},{"location":"resources/#other-software","text":"Python support code for VirtualBow This user-maintained project provides various utilities that make interacting with VirtualBow from Python more convenient. Features include creation of *.bow files, running simulations and evaluating *.res files. SuperTiller Is an Excel spreadsheet made by Alan Case for simulating the statics of user-defined bows. It's probably one of the most well-known bow design tools so far. Woodbear's Selfbow Design Sheet (zip) is an Excel spreadsheet that takes an inverse approach to the bow design problem - it calculates the necessary dimensions for a bow according to a user-defined stress distribution. BowCAD was a commercialy developed bow design software. Unfortunately it seems to be no longer available, which is a shame because it looked really promising. An archived version of their former website can be viewed here .","title":"Other Software"},{"location":"resources/#physics-of-bow-and-arrow","text":"Bob Kooi's Archery publications Bow and arrow dynamics Archery: The Technical Side","title":"Physics of Bow and Arrow"}]}