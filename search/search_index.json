{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"VirtualBow Bow and arrow physics simulation for Windows, Linux and MacOS VirtualBow is a free, open-source software tool for designing and simulating bows. It gives users an easy way to test and optimize their designs before actually building them. The simulation results include a variety of static and dynamic characteristics of the bow such as the draw curve, limb deformation, material stress, arrow velocity and degree of efficiency. However, please note that this software is still somewhat immature, so don't trust the results too much and report any bugs that you find. For more details see the screenshots and feature list below or have a look at the user manual . Visit our subreddit r/VirtualBow for news, support and general discussion. Screenshots Features Graphical Bow Editor Create, load and save bow models Edit layers, profile, material properties and other parameters Static and Dynamic Simulation Simulate the statics and dynamics of the bow Uses a finite element method internally Static results: Limb shapes Draw curve Stored energy Stress distribution ... Dynamic results: Position, velocity and acceleration of string and arrow Kinetic and potential energy Degree of efficiency ... Command Line Interface Run simulations in batch mode Call VirtualBow from other programs/scripts. The user manual shows an example for Python. Perform complex custom computations, like parameter studies and design optimizations Fully Documented User Manual : Documents all features of the program and helps you getting started. Theory Manual : Detailed documentation of the internal simulation methods. Free and Open-Source Released under the GNU General Public License v3.0 Free to use, modify and redistribute Anyone can get involved in the development Cross-Platform Downloads are available for Windows, Linux and MacOS","title":"Home"},{"location":"#virtualbow","text":"","title":"VirtualBow"},{"location":"#screenshots","text":"","title":"Screenshots"},{"location":"#features","text":"Graphical Bow Editor Create, load and save bow models Edit layers, profile, material properties and other parameters Static and Dynamic Simulation Simulate the statics and dynamics of the bow Uses a finite element method internally Static results: Limb shapes Draw curve Stored energy Stress distribution ... Dynamic results: Position, velocity and acceleration of string and arrow Kinetic and potential energy Degree of efficiency ... Command Line Interface Run simulations in batch mode Call VirtualBow from other programs/scripts. The user manual shows an example for Python. Perform complex custom computations, like parameter studies and design optimizations Fully Documented User Manual : Documents all features of the program and helps you getting started. Theory Manual : Detailed documentation of the internal simulation methods. Free and Open-Source Released under the GNU General Public License v3.0 Free to use, modify and redistribute Anyone can get involved in the development Cross-Platform Downloads are available for Windows, Linux and MacOS","title":"Features"},{"location":"contact/","text":"Contact This project is maintained by Stefan Pfeifer. Feel free to contact me at s-pfeifer@gmx.net .","title":"Contact"},{"location":"contact/#contact","text":"This project is maintained by Stefan Pfeifer. Feel free to contact me at s-pfeifer@gmx.net .","title":"Contact"},{"location":"contributing/","text":"Getting Involved There are many ways in which you can help with this this project. The following sections will give you some ideas, but feel free to contact me with your own ideas as well. Any help is appreciated! Feedback, Feature Requests and Bug Reports Tell me what you like and dislike about the program. Was it easy to get started with? What do you use it for? Are there specific features you wish it had? And of course be sure to report any bugs or other problems you encounter. If you like living on the edge, you can get the latest development versions of the program here (click on the blue Artifacts button). Those are not recommended for serious use though, only for testing! Software Development VirtualBow is written in C++ and uses the Qt GUI framework. There are always many things to implement or improve, from the user interface down to the simulation model and the numerical methods. The source code is hosted at https://github.com/bow-simulation/virtualbow . Check out the Readme for build instructions and how to contribute. If you need ideas on what to work on, have a look at the issues and milestones . Or just get in contact and I will gladly help you getting started. Validation of Simulation Results This is also a very important topic. If you have used this program to design or model an existing bow, let me know how the simulation compares to reality. The draw curve of a bow for example is fairly easy to obtain. Many other simulation results however are difficult to measure, think about material stresses for example. Therefore someone with access to advanced measuring equipment (things like strain gauges, acceleration sensors, a high speed camera, a tension testing machine, etc.) would be extremely helpful for this project.","title":"Getting Involved"},{"location":"contributing/#getting-involved","text":"There are many ways in which you can help with this this project. The following sections will give you some ideas, but feel free to contact me with your own ideas as well. Any help is appreciated!","title":"Getting Involved"},{"location":"contributing/#feedback-feature-requests-and-bug-reports","text":"Tell me what you like and dislike about the program. Was it easy to get started with? What do you use it for? Are there specific features you wish it had? And of course be sure to report any bugs or other problems you encounter. If you like living on the edge, you can get the latest development versions of the program here (click on the blue Artifacts button). Those are not recommended for serious use though, only for testing!","title":"Feedback, Feature Requests and Bug Reports"},{"location":"contributing/#software-development","text":"VirtualBow is written in C++ and uses the Qt GUI framework. There are always many things to implement or improve, from the user interface down to the simulation model and the numerical methods. The source code is hosted at https://github.com/bow-simulation/virtualbow . Check out the Readme for build instructions and how to contribute. If you need ideas on what to work on, have a look at the issues and milestones . Or just get in contact and I will gladly help you getting started.","title":"Software Development"},{"location":"contributing/#validation-of-simulation-results","text":"This is also a very important topic. If you have used this program to design or model an existing bow, let me know how the simulation compares to reality. The draw curve of a bow for example is fairly easy to obtain. Many other simulation results however are difficult to measure, think about material stresses for example. Therefore someone with access to advanced measuring equipment (things like strain gauges, acceleration sensors, a high speed camera, a tension testing machine, etc.) would be extremely helpful for this project.","title":"Validation of Simulation Results"},{"location":"discussion/","text":"Discussion Visit our subreddit r/VirtualBow for news, support and general discussion.","title":"Discussion"},{"location":"discussion/#discussion","text":"Visit our subreddit r/VirtualBow for news, support and general discussion.","title":"Discussion"},{"location":"download/","text":"Download Windows Installers for 32 bit and 64 bit versions of Windows 7 and later. virtualbow-0.6.1-win64.exe virtualbow-0.6.1-win32.exe MacOS Installer image for MacOS 10.11 and later. virtualbow-0.6.1-mac64.dmg Linux VirtualBow for Linux is either available as a .deb or .rpm package or as a self-contained AppImage that works across distributions. virtualbow-0.6.1-linux64.AppImage virtualbow-0.6.1-linux64.deb virtualbow-0.6.1-linux64.rpm Older versions All current and previous versions can also be found on GitHub .","title":"Download"},{"location":"download/#download","text":"","title":"Download"},{"location":"download/#windows","text":"Installers for 32 bit and 64 bit versions of Windows 7 and later. virtualbow-0.6.1-win64.exe virtualbow-0.6.1-win32.exe","title":"Windows"},{"location":"download/#macos","text":"Installer image for MacOS 10.11 and later. virtualbow-0.6.1-mac64.dmg","title":"MacOS"},{"location":"download/#linux","text":"VirtualBow for Linux is either available as a .deb or .rpm package or as a self-contained AppImage that works across distributions. virtualbow-0.6.1-linux64.AppImage virtualbow-0.6.1-linux64.deb virtualbow-0.6.1-linux64.rpm","title":"Linux"},{"location":"download/#older-versions","text":"All current and previous versions can also be found on GitHub .","title":"Older versions"},{"location":"news/","text":"News Version 0.6.1 released! 02.11.2019 This is just a minor bugfix release and only relevant if you (plan to) use the command line interface on Windows. It fixes an issue when trying to read the binary output files with Python. Meanwhile, work on the next major version 0.7 continues as usual. Version 0.6 released! 11.08.2019 The first thing you might notice is that this project has been renamed to VirtualBow . The old name Bow Simulator , even though very descriptive, was a bit uninspired and more of a placeholder anyway. This latest version now finally supports MacOS, making the software available on all major desktop systems. Releases for rpm -based linux distributions were also added. Other than that, only minor new features have been introduced, like better width/height interpolation and a more user-friendly way of defining bows with a stiff middle section. For a complete list of changes have a look at the new changelog . Most of the work on this version however doesn't affect users directly. The project has been moved to GitHub and now uses Azure Pipelines to automatically build release files for all supported platforms. This makes creating and testing new releases much less time-consuming and will hopefully lead to more frequent and regular releases in the future. Version 0.5 released! 18.03.2018 The most important new feature in this release is support for laminated bows, i.e. bows that consist of multiple layers. This has been on the list for quite a while and allows for a much wider range of possible bow designs. As usual there are also various bug fixes, usability improvements and little design changes. For Windows there is now a 64 bit version available in addition to the 32 bit one. Download numbers will decide the fate of the 32 bit version in future releases. For Linux the distribution agnostic download is now an AppImage instead of a snap package . Version 0.4 released! 04.11.2017 The main new features for this release are Contact handling, which allows the simulation of recurve bows Two new simulation results: String force and grip force A compatibility layer for opening older bow files. From now on you can expect your files to keep working with new releases, despite the file format changing every now and then. There are also various smaller and larger bug fixes and other improvements. Most notably the robustness of the static simulation methods has increased a lot. Many bow designs that previously would have crashed the simulation are now possible. Version 0.3 released! 04.09.2017 This release introduces a new command line interface for running simulations in batch mode, without opening the GUI. This way Bow Simulator can be called from other programs for performing more advanced computations like parameter studies and optimizations. The user manual has been updated with detailed specifications of the input and output formats and an example for using Bow Simulator with the Python programming language. Version 0.2 released! 06.08.2017 Did I say the previous version was a complete redesign? Well, here's another one. This time the changes are A new tree based bow editor A 3d view of the limb geometry Many minor improvements and bugfixes Unfortunately there is also some bad news: No more Mac OS support for now. I previously used a virtual machine to compile the Mac version of this program, but it stopped working and I couldn't manage to set it up again (Mac OS can be really tricky without Apple hardware). So in order to not delay this release any further I decided to give up on that for now. Version 0.1 released! 25.12.2016 This is the initial release of Bow Simulator, a complete rewrite and redesign of its predecessor Bow Simulation Tool . It comes with many improvements such as A more user-friendly interface Improved simulation performance Cross-platform support (Windows, Linux, Mac OS X) The internal redesign of the program lays the groundwork for new features like simulating laminated bows, which is planned for one of the upcoming versions. Thank you for your interest and stay tuned!","title":"News"},{"location":"news/#news","text":"","title":"News"},{"location":"news/#version-061-released-02112019","text":"This is just a minor bugfix release and only relevant if you (plan to) use the command line interface on Windows. It fixes an issue when trying to read the binary output files with Python. Meanwhile, work on the next major version 0.7 continues as usual.","title":"Version 0.6.1 released! 02.11.2019"},{"location":"news/#version-06-released-11082019","text":"The first thing you might notice is that this project has been renamed to VirtualBow . The old name Bow Simulator , even though very descriptive, was a bit uninspired and more of a placeholder anyway. This latest version now finally supports MacOS, making the software available on all major desktop systems. Releases for rpm -based linux distributions were also added. Other than that, only minor new features have been introduced, like better width/height interpolation and a more user-friendly way of defining bows with a stiff middle section. For a complete list of changes have a look at the new changelog . Most of the work on this version however doesn't affect users directly. The project has been moved to GitHub and now uses Azure Pipelines to automatically build release files for all supported platforms. This makes creating and testing new releases much less time-consuming and will hopefully lead to more frequent and regular releases in the future.","title":"Version 0.6 released! 11.08.2019"},{"location":"news/#version-05-released-18032018","text":"The most important new feature in this release is support for laminated bows, i.e. bows that consist of multiple layers. This has been on the list for quite a while and allows for a much wider range of possible bow designs. As usual there are also various bug fixes, usability improvements and little design changes. For Windows there is now a 64 bit version available in addition to the 32 bit one. Download numbers will decide the fate of the 32 bit version in future releases. For Linux the distribution agnostic download is now an AppImage instead of a snap package .","title":"Version 0.5 released! 18.03.2018"},{"location":"news/#version-04-released-04112017","text":"The main new features for this release are Contact handling, which allows the simulation of recurve bows Two new simulation results: String force and grip force A compatibility layer for opening older bow files. From now on you can expect your files to keep working with new releases, despite the file format changing every now and then. There are also various smaller and larger bug fixes and other improvements. Most notably the robustness of the static simulation methods has increased a lot. Many bow designs that previously would have crashed the simulation are now possible.","title":"Version 0.4 released! 04.11.2017"},{"location":"news/#version-03-released-04092017","text":"This release introduces a new command line interface for running simulations in batch mode, without opening the GUI. This way Bow Simulator can be called from other programs for performing more advanced computations like parameter studies and optimizations. The user manual has been updated with detailed specifications of the input and output formats and an example for using Bow Simulator with the Python programming language.","title":"Version 0.3 released! 04.09.2017"},{"location":"news/#version-02-released-06082017","text":"Did I say the previous version was a complete redesign? Well, here's another one. This time the changes are A new tree based bow editor A 3d view of the limb geometry Many minor improvements and bugfixes Unfortunately there is also some bad news: No more Mac OS support for now. I previously used a virtual machine to compile the Mac version of this program, but it stopped working and I couldn't manage to set it up again (Mac OS can be really tricky without Apple hardware). So in order to not delay this release any further I decided to give up on that for now.","title":"Version 0.2 released! 06.08.2017"},{"location":"news/#version-01-released-25122016","text":"This is the initial release of Bow Simulator, a complete rewrite and redesign of its predecessor Bow Simulation Tool . It comes with many improvements such as A more user-friendly interface Improved simulation performance Cross-platform support (Windows, Linux, Mac OS X) The internal redesign of the program lays the groundwork for new features like simulating laminated bows, which is planned for one of the upcoming versions. Thank you for your interest and stay tuned!","title":"Version 0.1 released! 25.12.2016"},{"location":"resources/","text":"Resources User Manual The user manual gives an overview of all program features, explains the input parameters and simulation results and also contains some additional background information. User Manual Theory Manual The Theory Manual is still a work in progress and is intended for developers and interested users. It covers the theoretical and technical details behind the software like the mathematical bow model and the numerical solution methods. Theory Manual Bow Design Simulations can be used to evaluate bow designs, but they don't actually tell you how to design a good bow. These are some good resources about bow design: The Traditional Bowyer's Bible , Volume 1, Chapter 3: Bow Design and Performance by Tim Baker. All common design choices and how they affect bow performance are explained in a very practical and understandable but nonetheless precise way. The article on bow design from the crossbow building wiki is also a good read. It is geared towards crossbows but most of it also applies to bows in general. Similar/Related Software SuperTiller by Alan Case is an Excel spreadsheet for simulating the statics of user-defined bows. It's probably one of the most well-known bow design tools. Woodbear's Selfbow Design Sheet [zip] by David Dewey is an Excel spreadsheet that calculates the necessary dimensions for a bow according to a user-defined stress distribution. BowCAD by Joachim Gr\u00f6ger and Chris Goetz was a commercial attempt at bow design software. At one point they were even offering different kinds of licenses on their website http://www.bowcad.com/ . Unfortunately it seems to be no longer available. DrawCurve Calculator by Chris Snyder is a utility program for visualizing a bow's draw curve and calculating the stored energy. x-Ballistics is a browser based application that can simulate the exterior ballistics/trajectory of arrows. Physics of Bow and Arrow Bob Kooi's Archery publications Bow and arrow dynamics [pdf]","title":"Resources"},{"location":"resources/#resources","text":"","title":"Resources"},{"location":"resources/#user-manual","text":"The user manual gives an overview of all program features, explains the input parameters and simulation results and also contains some additional background information. User Manual","title":"User Manual"},{"location":"resources/#theory-manual","text":"The Theory Manual is still a work in progress and is intended for developers and interested users. It covers the theoretical and technical details behind the software like the mathematical bow model and the numerical solution methods. Theory Manual","title":"Theory Manual"},{"location":"resources/#bow-design","text":"Simulations can be used to evaluate bow designs, but they don't actually tell you how to design a good bow. These are some good resources about bow design: The Traditional Bowyer's Bible , Volume 1, Chapter 3: Bow Design and Performance by Tim Baker. All common design choices and how they affect bow performance are explained in a very practical and understandable but nonetheless precise way. The article on bow design from the crossbow building wiki is also a good read. It is geared towards crossbows but most of it also applies to bows in general.","title":"Bow Design"},{"location":"resources/#similarrelated-software","text":"SuperTiller by Alan Case is an Excel spreadsheet for simulating the statics of user-defined bows. It's probably one of the most well-known bow design tools. Woodbear's Selfbow Design Sheet [zip] by David Dewey is an Excel spreadsheet that calculates the necessary dimensions for a bow according to a user-defined stress distribution. BowCAD by Joachim Gr\u00f6ger and Chris Goetz was a commercial attempt at bow design software. At one point they were even offering different kinds of licenses on their website http://www.bowcad.com/ . Unfortunately it seems to be no longer available. DrawCurve Calculator by Chris Snyder is a utility program for visualizing a bow's draw curve and calculating the stored energy. x-Ballistics is a browser based application that can simulate the exterior ballistics/trajectory of arrows.","title":"Similar/Related Software"},{"location":"resources/#physics-of-bow-and-arrow","text":"Bob Kooi's Archery publications Bow and arrow dynamics [pdf]","title":"Physics of Bow and Arrow"}]}