{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"VirtualBow Bow & Arrow Physics Simulation VirtualBow is a free, open-source software tool for designing and simulating bows. It gives users an easy way to test and optimize their designs by providing almost instant feedback about a bow's predicted performance. The simulation results include a variety of static and dynamic characteristics of the bow such as the draw curve, limb deformation, stresses, arrow velocity and degree of efficiency. However, please note that this software is still immature, so don't trust the results too much yet and report any bugs that you find. For more details see the screenshots and feature list below or have a look at the user manual . Visit our subreddit r/VirtualBow for news, support and general discussion. Features Model Editor Create, load and save bow models Edit layers, material properties and other parameters Solver Simulates the statics and dynamics of the bow Uses the finite element method (FEM) Result Viewer Static results: Limb shapes Draw curve Stored energy Stress distribution ... Dynamic results: Position, velocity and acceleration of string and arrow Kinetic and potential energy Degree of efficiency ... Command Line Interface Run simulations from the command line Call VirtualBow from other programs/scripts to perform parameter studies and design optimizations Fully Documented User Manual : Explains all features of the program and helps you getting started Theory Manual : Detailed documentation of the internal simulation methods Free and Open-Source Released under the GNU General Public License v3.0 Free to use, modify and redistribute Anyone can get involved in the development Cross-Platform Downloads are available for Windows, Linux and MacOS","title":"Home"},{"location":"#features","text":"Model Editor Create, load and save bow models Edit layers, material properties and other parameters Solver Simulates the statics and dynamics of the bow Uses the finite element method (FEM) Result Viewer Static results: Limb shapes Draw curve Stored energy Stress distribution ... Dynamic results: Position, velocity and acceleration of string and arrow Kinetic and potential energy Degree of efficiency ... Command Line Interface Run simulations from the command line Call VirtualBow from other programs/scripts to perform parameter studies and design optimizations Fully Documented User Manual : Explains all features of the program and helps you getting started Theory Manual : Detailed documentation of the internal simulation methods Free and Open-Source Released under the GNU General Public License v3.0 Free to use, modify and redistribute Anyone can get involved in the development Cross-Platform Downloads are available for Windows, Linux and MacOS","title":"Features"},{"location":"about/","text":"Contact and Support This project is maintained by Stefan Pfeifer. Feel free to contact me at s-pfeifer@gmx.net . You can also visit our subreddit r/VirtualBow for news, support and general discussion. Getting Involved There are many ways in which you can help with this this project. The following sections will give you some ideas, but feel free to contact me with your own ideas as well. Any help is appreciated! Feedback, Feature Requests and Bug Reports: Tell me what you like and dislike about the program. Was it easy to get started with? What do you use it for? Are there specific features you wish it had? And of course be sure to report any bugs or other problems you encounter. Software Development: VirtualBow is written in C++ and uses the Qt GUI framework. There are always many things to implement or improve, from the user interface down to the simulation model and the numerical methods. The source code is hosted at https://github.com/bow-simulation/virtualbow . Check out the Readme for build instructions and how to contribute. If you need ideas on what to work on, have a look at the issues and milestones . Or just get in contact and I will gladly help you getting started. Validation of Simulation Results: This is a very important topic. If you have used this program to design or model an existing bow, let me know how the simulation compares to reality. Many simulation results however are difficult to measure, think about stress for example. Therefore anyone with access to advanced measuring equipment (things like strain gauges, acceleration sensors, a high speed camera, etc.) can be very helpful for this project.","title":"About"},{"location":"about/#contact-and-support","text":"This project is maintained by Stefan Pfeifer. Feel free to contact me at s-pfeifer@gmx.net . You can also visit our subreddit r/VirtualBow for news, support and general discussion.","title":"Contact and Support"},{"location":"about/#getting-involved","text":"There are many ways in which you can help with this this project. The following sections will give you some ideas, but feel free to contact me with your own ideas as well. Any help is appreciated! Feedback, Feature Requests and Bug Reports: Tell me what you like and dislike about the program. Was it easy to get started with? What do you use it for? Are there specific features you wish it had? And of course be sure to report any bugs or other problems you encounter. Software Development: VirtualBow is written in C++ and uses the Qt GUI framework. There are always many things to implement or improve, from the user interface down to the simulation model and the numerical methods. The source code is hosted at https://github.com/bow-simulation/virtualbow . Check out the Readme for build instructions and how to contribute. If you need ideas on what to work on, have a look at the issues and milestones . Or just get in contact and I will gladly help you getting started. Validation of Simulation Results: This is a very important topic. If you have used this program to design or model an existing bow, let me know how the simulation compares to reality. Many simulation results however are difficult to measure, think about stress for example. Therefore anyone with access to advanced measuring equipment (things like strain gauges, acceleration sensors, a high speed camera, etc.) can be very helpful for this project.","title":"Getting Involved"},{"location":"download/","text":"Windows Installer for 64 bit versions of Windows 8 and 10. virtualbow-0.8-win64.exe MacOS Installer disk image for MacOS 10.13 and later. virtualbow-0.8-mac64.dmg Linux The Linux version is available either as a deb or an rpm package. They are tested on Ubuntu 16.04 and Fedora 30 but should also work on other distributions that use those package formats. virtualbow-0.8-linux64.deb virtualbow-0.8-linux64.rpm","title":"Download"},{"location":"download/#windows","text":"Installer for 64 bit versions of Windows 8 and 10. virtualbow-0.8-win64.exe","title":"Windows"},{"location":"download/#macos","text":"Installer disk image for MacOS 10.13 and later. virtualbow-0.8-mac64.dmg","title":"MacOS"},{"location":"download/#linux","text":"The Linux version is available either as a deb or an rpm package. They are tested on Ubuntu 16.04 and Fedora 30 but should also work on other distributions that use those package formats. virtualbow-0.8-linux64.deb virtualbow-0.8-linux64.rpm","title":"Linux"},{"location":"news/","text":"Version 0.8 released! 13.03.2021 This release adds various smaller features and improvements, like for example A new arrow clamp force that prevents the arrow from leaving the string too early New icons for the toolbar and model tree as well as other visual changes Improvements to the presentation of some of the output results Several bug fixes and minor improvements The complete list of changes can be found in the changelog . Version 0.7.1 released! 28.05.2020 This minor release fixes two issues that prevent VirtualBow from being usable on MacOS, as well as another issue on Windows where the simulation would fail for certain input parameters. As always, the exact changes can be found in the changelog . Version 0.7 released! 12.05.2020 The most notable change in this new version of VirtualBow is that the application has been split into the following three independent components: VirtualBow - Model editor, creates, loads and saves model files VirtualBow Post - Result viewer, opens and visualizes result files VirtualBow Solver - Reads a model file and produces a result file The basic workflow of the program is still very similar, but it is now also possible to save and view simulation results independently from the main application. Other than that there are many smaller improvements to the user interfaces of both model editor and result viewer. On the simulation side, several new output results were added, as well as the possibility to take the damping properties of limbs and string into account. Since Windows 7 reached its end of life in January this year, it is no longer a supported platform for VirtualBow. Along with that, the 32 bit Windows version was also dropped from the releases. Another release that unfortunately had to be dropped is the AppImage for Linux. The approach \"one application - one file\" just doesn't work very well anymore with the new components. Hopefully most users can switch to the deb or rpm packages. Sorry for any inconvenience this may cause! As always, a detailed list of changes can be found in the changelog . Version 0.6.1 released! 02.11.2019 This is just a minor bugfix release and only relevant if you (plan to) use the command line interface on Windows. It fixes an issue when trying to read the binary output files with Python. Meanwhile, work on the next major version 0.7 continues as usual. Version 0.6 released! 11.08.2019 The first thing you might notice is that this project has been renamed to VirtualBow . The old name Bow Simulator , even though very descriptive, was a bit uninspired and more of a placeholder anyway. This latest version now finally supports MacOS, making the software available on all major desktop systems. Releases for rpm -based Linux distributions were also added. Other than that, only minor new features have been introduced, like better width/height interpolation and a more user-friendly way of defining bows with a stiff middle section. For a complete list of changes have a look at the new changelog . Most of the work on this version however doesn't affect users directly. The project has been moved to GitHub and now uses Azure Pipelines to automatically build release files for all supported platforms. This makes creating and testing new releases much less time-consuming and will hopefully lead to more frequent and regular releases in the future. Version 0.5 released! 18.03.2018 The most important new feature in this release is support for laminated bows, i.e. bows that consist of multiple layers. This has been on the list for quite a while and allows for a much wider range of possible bow designs. As usual there are also various bug fixes, usability improvements and little design changes. For Windows there is now a 64 bit version available in addition to the 32 bit one. Download numbers will decide the fate of the 32 bit version in future releases. For Linux the distribution agnostic download is now an AppImage instead of a snap package . Version 0.4 released! 04.11.2017 The main new features for this release are Contact handling, which allows the simulation of recurve bows Two new simulation results: String force and grip force A compatibility layer for opening older bow files. From now on you can expect your files to keep working with new releases, despite the file format changing every now and then. There are also various smaller and larger bug fixes and other improvements. Most notably the robustness of the static simulation methods has increased a lot. Many bow designs that previously would have crashed the simulation are now possible. Version 0.3 released! 04.09.2017 This release introduces a new command line interface for running simulations in batch mode, without opening the GUI. This way Bow Simulator can be called from other programs for performing more advanced computations like parameter studies and optimizations. The user manual has been updated with detailed specifications of the input and output formats and an example for using Bow Simulator with the Python programming language. Version 0.2 released! 06.08.2017 This is another fairly extensive redesign of the user interface. This time the changes are A new tree based bow editor A 3d view of the limb geometry Many minor improvements and bugfixes Unfortunately there is also some bad news: No more Mac OS support for now. I previously used a virtual machine to compile the Mac version of this program, but it stopped working and I couldn't manage to set it up again (Mac OS can be really tricky without Apple hardware). So in order to not delay this release any further I decided to give up on that for now. Version 0.1 released! 25.12.2016 This is the initial release of Bow Simulator, a complete rewrite and redesign of its predecessor Bow Simulation Tool . It comes with many improvements such as A more user-friendly interface Improved simulation performance Cross-platform support (Windows, Linux, Mac OS X) The internal redesign of the program lays the groundwork for new features like simulating laminated bows, which is planned for one of the upcoming versions. Thank you for your interest and stay tuned!","title":"News"},{"location":"news/#version-08-released-13032021","text":"This release adds various smaller features and improvements, like for example A new arrow clamp force that prevents the arrow from leaving the string too early New icons for the toolbar and model tree as well as other visual changes Improvements to the presentation of some of the output results Several bug fixes and minor improvements The complete list of changes can be found in the changelog .","title":"Version 0.8 released! 13.03.2021"},{"location":"news/#version-071-released-28052020","text":"This minor release fixes two issues that prevent VirtualBow from being usable on MacOS, as well as another issue on Windows where the simulation would fail for certain input parameters. As always, the exact changes can be found in the changelog .","title":"Version 0.7.1 released! 28.05.2020"},{"location":"news/#version-07-released-12052020","text":"The most notable change in this new version of VirtualBow is that the application has been split into the following three independent components: VirtualBow - Model editor, creates, loads and saves model files VirtualBow Post - Result viewer, opens and visualizes result files VirtualBow Solver - Reads a model file and produces a result file The basic workflow of the program is still very similar, but it is now also possible to save and view simulation results independently from the main application. Other than that there are many smaller improvements to the user interfaces of both model editor and result viewer. On the simulation side, several new output results were added, as well as the possibility to take the damping properties of limbs and string into account. Since Windows 7 reached its end of life in January this year, it is no longer a supported platform for VirtualBow. Along with that, the 32 bit Windows version was also dropped from the releases. Another release that unfortunately had to be dropped is the AppImage for Linux. The approach \"one application - one file\" just doesn't work very well anymore with the new components. Hopefully most users can switch to the deb or rpm packages. Sorry for any inconvenience this may cause! As always, a detailed list of changes can be found in the changelog .","title":"Version 0.7 released! 12.05.2020"},{"location":"news/#version-061-released-02112019","text":"This is just a minor bugfix release and only relevant if you (plan to) use the command line interface on Windows. It fixes an issue when trying to read the binary output files with Python. Meanwhile, work on the next major version 0.7 continues as usual.","title":"Version 0.6.1 released! 02.11.2019"},{"location":"news/#version-06-released-11082019","text":"The first thing you might notice is that this project has been renamed to VirtualBow . The old name Bow Simulator , even though very descriptive, was a bit uninspired and more of a placeholder anyway. This latest version now finally supports MacOS, making the software available on all major desktop systems. Releases for rpm -based Linux distributions were also added. Other than that, only minor new features have been introduced, like better width/height interpolation and a more user-friendly way of defining bows with a stiff middle section. For a complete list of changes have a look at the new changelog . Most of the work on this version however doesn't affect users directly. The project has been moved to GitHub and now uses Azure Pipelines to automatically build release files for all supported platforms. This makes creating and testing new releases much less time-consuming and will hopefully lead to more frequent and regular releases in the future.","title":"Version 0.6 released! 11.08.2019"},{"location":"news/#version-05-released-18032018","text":"The most important new feature in this release is support for laminated bows, i.e. bows that consist of multiple layers. This has been on the list for quite a while and allows for a much wider range of possible bow designs. As usual there are also various bug fixes, usability improvements and little design changes. For Windows there is now a 64 bit version available in addition to the 32 bit one. Download numbers will decide the fate of the 32 bit version in future releases. For Linux the distribution agnostic download is now an AppImage instead of a snap package .","title":"Version 0.5 released! 18.03.2018"},{"location":"news/#version-04-released-04112017","text":"The main new features for this release are Contact handling, which allows the simulation of recurve bows Two new simulation results: String force and grip force A compatibility layer for opening older bow files. From now on you can expect your files to keep working with new releases, despite the file format changing every now and then. There are also various smaller and larger bug fixes and other improvements. Most notably the robustness of the static simulation methods has increased a lot. Many bow designs that previously would have crashed the simulation are now possible.","title":"Version 0.4 released! 04.11.2017"},{"location":"news/#version-03-released-04092017","text":"This release introduces a new command line interface for running simulations in batch mode, without opening the GUI. This way Bow Simulator can be called from other programs for performing more advanced computations like parameter studies and optimizations. The user manual has been updated with detailed specifications of the input and output formats and an example for using Bow Simulator with the Python programming language.","title":"Version 0.3 released! 04.09.2017"},{"location":"news/#version-02-released-06082017","text":"This is another fairly extensive redesign of the user interface. This time the changes are A new tree based bow editor A 3d view of the limb geometry Many minor improvements and bugfixes Unfortunately there is also some bad news: No more Mac OS support for now. I previously used a virtual machine to compile the Mac version of this program, but it stopped working and I couldn't manage to set it up again (Mac OS can be really tricky without Apple hardware). So in order to not delay this release any further I decided to give up on that for now.","title":"Version 0.2 released! 06.08.2017"},{"location":"news/#version-01-released-25122016","text":"This is the initial release of Bow Simulator, a complete rewrite and redesign of its predecessor Bow Simulation Tool . It comes with many improvements such as A more user-friendly interface Improved simulation performance Cross-platform support (Windows, Linux, Mac OS X) The internal redesign of the program lays the groundwork for new features like simulating laminated bows, which is planned for one of the upcoming versions. Thank you for your interest and stay tuned!","title":"Version 0.1 released! 25.12.2016"},{"location":"resources/","text":"Documentation User Manual This is the main documentation of VirtualBow. It provides an overview of the program and its features and shows you how to model and analyze bow designs. Theory Manual The theory manual is still a work in progress and is intended for developers and interested users. It covers the theoretical and technical details behind the software from the mathematical bow model to the numerical simulation methods. Material Data The Wood Database has average values for the mechanical properties of many types of wood. String material data Tensile test results for Dacron B50 , Fastflight Plus and BCY 452X , done by the German Institutes of Textile and Fiber Research ( DITF ). The report is German, but the results are also found in the user manual. Other Software Python support code for VirtualBow This user-maintained project provides various utilities that make interacting with VirtualBow from Python more easy. Features include working with *.bow files, running simulations and evaluating *.res result files. SuperTiller Excel spreadsheet by Alan Case for simulating the statics of user-defined bows. It's probably one of the more well-known bow design tools. Woodbear's Selfbow Design Sheet (zip) is an Excel spreadsheet that takes an inverse approach to the bow design problem - it calculates the necessary dimensions for a bow according to a user-defined stress distribution. BowCAD was a commercialy developed bow design software. Unfortunately the software seems to be no longer available, which is a shame because it looked really promising. An archived version of their former website can be viewed here . Physics of Bow and Arrow Bob Kooi's Archery publications Bow and arrow dynamics Archery: The Technical Side","title":"Resources"},{"location":"resources/#documentation","text":"User Manual This is the main documentation of VirtualBow. It provides an overview of the program and its features and shows you how to model and analyze bow designs. Theory Manual The theory manual is still a work in progress and is intended for developers and interested users. It covers the theoretical and technical details behind the software from the mathematical bow model to the numerical simulation methods.","title":"Documentation"},{"location":"resources/#material-data","text":"The Wood Database has average values for the mechanical properties of many types of wood. String material data Tensile test results for Dacron B50 , Fastflight Plus and BCY 452X , done by the German Institutes of Textile and Fiber Research ( DITF ). The report is German, but the results are also found in the user manual.","title":"Material Data"},{"location":"resources/#other-software","text":"Python support code for VirtualBow This user-maintained project provides various utilities that make interacting with VirtualBow from Python more easy. Features include working with *.bow files, running simulations and evaluating *.res result files. SuperTiller Excel spreadsheet by Alan Case for simulating the statics of user-defined bows. It's probably one of the more well-known bow design tools. Woodbear's Selfbow Design Sheet (zip) is an Excel spreadsheet that takes an inverse approach to the bow design problem - it calculates the necessary dimensions for a bow according to a user-defined stress distribution. BowCAD was a commercialy developed bow design software. Unfortunately the software seems to be no longer available, which is a shame because it looked really promising. An archived version of their former website can be viewed here .","title":"Other Software"},{"location":"resources/#physics-of-bow-and-arrow","text":"Bob Kooi's Archery publications Bow and arrow dynamics Archery: The Technical Side","title":"Physics of Bow and Arrow"}]}